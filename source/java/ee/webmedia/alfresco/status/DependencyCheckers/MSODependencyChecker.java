package ee.webmedia.alfresco.status.DependencyCheckers;

import java.io.*;
import java.net.*;
import javax.activation.DataSource; 
import javax.mail.internet.MimeMultipart;
import java.util.List; 


/**
 * 
 * @author viljar.tina
 *
 */
public class MSODependencyChecker extends DependencyChecker{

	
	/**
	 * 
	 */
	public MSODependencyChecker( String name, String uri, Boolean isFatal ) {
		super(name, uri, isFatal);
	}
	
	
	
	/**
	 * 
	 */
	public Boolean Test ( ) {
		try{
			URL url = new URL(this.Uri + "?singleWsdl");
			
			HttpURLConnection conn = (HttpURLConnection) url.openConnection();
			conn.setDoOutput( true );
			conn.setDoInput(true);
			conn.setInstanceFollowRedirects( false );
			conn.setRequestMethod("POST");
			conn.setRequestProperty( "Content-Type", "text/xml;charset=UTF-8"); 
			conn.setRequestProperty( "SOAPAction", "http://webmedia.ee/mso/MsoPortBinding/convertToPdf");

			conn.setUseCaches( false );
			
			
			StringBuilder postData = new StringBuilder();
			postData.append("<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:mso=\"http://webmedia.ee/mso\">"
					+"<soapenv:Header/>"
					+"<soapenv:Body>"
					+"<mso:msoDocumentInput>"
					+"<mso:documentFile></mso:documentFile>"   
					+"<mso:fileEncoding>UTF-8</mso:fileEncoding>"
					+"<mso:fileType>application/vnd.openxmlformats-officedocument.wordprocessingml.document</mso:fileType>"
					+"</mso:msoDocumentInput>"
					+"</soapenv:Body>"
					+"</soapenv:Envelope>");


			//Send request ..
			conn.getOutputStream().write(postData.toString().getBytes("UTF-8"));

			
			// Get response ..
			Integer statusCode = conn.getResponseCode(); 
			String statusMesg = conn.getResponseMessage();
			Status = STATUS_NOK;
			if(statusCode.equals(200)){
				
				
				// TODO: pmts võiks ka tsekata, kas vastuse manusena ikkagi ka pdf tagasi saadetakse.
				//String ctype = conn.getHeaderField("Content-Type");            
				//MimeMultipart  mp = new MimeMultipart(new InputStreamDataSource(conn.getInputStream(), ctype));
				
				
				Status = STATUS_OK;
			    return true;
			}
									
			// ..
			StatusMsg = statusCode + " " + statusMesg;	
			
		    return false;
		}catch(Exception ex){
			StatusMsg = ex.getMessage();
			
			Status = STATUS_NOK;
		    return false;
		}
		
	}
		
		private class InputStreamDataSource implements DataSource { 
			 
		    protected final InputStream in; 
		 
		    protected final String ctype; 
		 
		    protected final String name; 
		 
		    public InputStreamDataSource(InputStream in, String ctype) { 
		        this(in, ctype, "MultipartRequest"); 
		    } 
		 
		    public InputStreamDataSource(InputStream in, String ctype, String name) { 
		        this.in = in; 
		        this.name = name; 
		        this.ctype = ctype; 
		    } 
		 
		    public OutputStream getOutputStream() throws IOException { 
		        throw new UnsupportedOperationException("data source is not writeable"); 
		    } 
		 
		    public String getName() { 
		        return name; 
		    } 
		 
		    public InputStream getInputStream() throws IOException { 
		        return in; 
		    } 
		 
		    public String getContentType() { 
		        return ctype; 
		    } 
		
		
		
    }

	
}