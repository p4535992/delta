#
# DB connection
#-------------
db.driver=org.postgresql.Driver
db.url=jdbc:postgresql://${db.host}:${db.port}/${db.name}
hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
hibernate.query.substitutions=true TRUE, false FALSE

# Authentication is performed externally (for example CAS)
authentication.chain=amr1:amr
synchronization.subsystem=amr
imap.subsystem=simdhs

# User 'admin' no longer exists by default
alfresco_user_store.adminusername=

# User 'guest' no longer exists by default
alfresco_user_store.guestusername= 
spaces.guest_home.childname=

# Create home folders as lazily - when user logs in the first time
home.folder.creation.eager=false

# Would like to disable quotas, but Alfresco contains bugs :(
#system.usages.enabled=false

# IMAP configuration
imap.server.enabled=true
imap.config.home.rootPath=/imap-ext:imap-root
imap.config.server.mountPoints.default.rootPath=/imap-ext:imap-root
imap.config.server.mountPoints.value.AlfrescoIMAP.mountPointName=Dokumendihaldus

# The maximum number of clauses that are allowed in a lucene query 
lucene.query.maxClauses=20000


# Alfresco Email Service and Email Server

# Enable/Disable the inbound email service.  The service could be used by processes other than
# the Email Server (e.g. direct RMI access) so this flag is independent of the Email Service.
email.inbound.enabled=true
# Email Server properties 
email.server.enabled=true

# =============================================
# Default values for alfresco-global.properties

#
# IMAP Server Configuration
#-------------

# Update this value with the IP address (or corresponding DNS address) of your external IP interface.
# A value of 0.0.0.0 in Unix will make it listen on all IP interfaces. 
imap.server.host=0.0.0.0

#-------------
# Excel import settings
#
# location where are excel files that contain documents to import
importer.excel.excelFilesLocationBase=
# base location for attachments referred with relative path from excel files
importer.excel.attachmentFilesLocationBase=
# how many documents are imported within the same transaction(when transaction gets large, operations get significantly slower) 
importer.excel.nrOfDocumentsInTransaction=50

#-------------
# Postipoiss import settings
#
# Execute importing Postipoiss functions and series on startup
import.postipoiss.structure.enabled=false

# Path to folder that contains files struktuur.csv, toimikud.csv
import.postipoiss.structure.inputFolderPath=

# Execute importing Postipoiss functions and series on startup
import.postipoiss.documents.enabled=false

# Execute indexing of files
import.postipoiss.documents.index_enabled=false

# Path to folder that contains documents (*.xml) and also files
import.postipoiss.documents.inputFolderPath=

# Path to the mappings file
import.postipoiss.documents.mappingsFileName=

# Stop import, do not import documents with id larger than this
import.postipoiss.documents.stopAfterDocumentId=999999

# The maximum number of clauses that are allowed in a lucene query 
lucene.query.maxClauses=20000

# Documents with cm:created equal or later than searchableSendModeUpdate.begin.date 
# shall be checked by SearchableSendModeUpdate to set correct searchableSendModeUpdate property values
# to remove sequences of document copying bug (CL task 131723).
# Use format "dd.MM.yyyy"; empty value indicates that no update is needed
searchableSendModeUpdate.begin.date=

organizationStructure.updateEnabled=true

groups.editingAllowed=true

#-------------
# LDAP Configuration

# The query to select all objects that represent the users to import.
# Get all users who have idCode filled
ldap.synchronization.personQuery=(&(objectclass=user)(pager=*))

# The query to select one specific user to import - by ID code.
ldap.synchronization.personIdCodeQuery=(&(objectclass=user)(pager={0}))

# The query to select one specific user to import - by username.
ldap.synchronization.personUsernameQuery=(&(objectclass=user)(pager=*)(sAMAccountName={0}))

# The query to select all objects that represent the groups to import.
ldap.synchronization.groupQuery=(objectclass=group)

# The default home folder provider to use for people created via LDAP import
ldap.synchronization.defaultHomeFolderProvider=userHomesHomeFolderProvider

# The query to select objects that represent the users to import that have changed since a certain time.
ldap.synchronization.personDifferentialQuery=NOTUSED

# The person type in LDAP
ldap.synchronization.personType=user

# The attribute name on people objects found in LDAP to use as the uid in Alfresco
ldap.synchronization.userIdAttributeName=pager

# The attribute on person objects in LDAP to map to the first name property in Alfresco
ldap.synchronization.userFirstNameAttributeName=givenName

# The attribute on person objects in LDAP to map to the last name property in Alfresco
ldap.synchronization.userLastNameAttributeName=sn

# The attribute on person objects in LDAP to map to the job title name property in Alfresco
ldap.synchronization.userJobtitleAttributeName=title

# The attribute on person objects in LDAP to map to the telephone number property in Alfresco
ldap.synchronization.userTelephoneAttributeName=telephoneNumber

# The attribute on person objects in LDAP to map to the email property in Alfresco
ldap.synchronization.userEmailAttributeName=mail

# The query to select objects that represent the groups to import that have changed since a certain time.
ldap.synchronization.groupDifferentialQuery=NOTUSED

# The group type in LDAP
ldap.synchronization.groupType=group

# The attribute on LDAP group objects to map to the gid property in Alfrecso
ldap.synchronization.groupIdAttributeName=cn

# The attribute in LDAP on group objects that defines the DN for its members
ldap.synchronization.groupMemberAttributeName=member

# Documents with cm:created equal or later than searchableSendModeUpdate.begin.date
# shall be checked by SearchableSendModeUpdate to set correct searchableSendModeUpdate property values
# to remove sequences of document copying bug (CL task 131723).
# Use format "dd.MM.yyyy"; empty value indicates that no update is needed
searchableSendModeUpdate.begin.date=

# If true execute searchablePropertiesUpdater to create and update searchable properties,
# used to set searchable properties on documents imported from Postipoiss (CL task 143388).
# Possible values: true or false (default)
searchablePropertiesUpdater.enabled=false

# Files with cm:created equal or later than fileMimeTypeUpdater.begin.date
# shall be checked by FileMimeTypeUpdater to set correct mimeType property value
# to remove consequences of old mimeType guessing behaviour (CL task 122959).
# Use format "dd.MM.yyyy"; empty value indicates that no update is needed
fileMimeTypeUpdater.begin.date=

# If true, perform document model changes that were introduced in 2.1, on existing data
# All instances, that are upgrading from 1.x, need to set this to true;
# when script has completed successfully, it can be set false.
# For instances, that are at version >= 2.1 since the installation, this script is useless.
version21DocumentUpdater.enabled=false

# If true execute ParallelTasksPropertiesUpdater 
# to update parallelTasks property if workflow's paralleTask == null 
# (the situation is actually not allowed in current model, but it somehow appears in live environment)
# and also rewrites all properties for all tasks in such workflow
# to force lucene index update (CL task 155454).
# Possible values: true or false (default)
parallelTasksPropertiesUpdater.enabled=false