Not submitted to ACT
https://issues.alfresco.com/jira/browse/ETHREEOH-2416

Fix merged to Enterprise v3.2.0 branch on 02-Oct-09

--- repository-src-3.2/java/org/alfresco/repo/node/db/hibernate/HibernateNodeDaoServiceImpl.java.orig	2009-07-01 15:20:18.000000000 +0300
+++ repository-src-3.2/java/org/alfresco/repo/node/db/hibernate/HibernateNodeDaoServiceImpl.java	2009-08-19 11:52:36.000000000 +0300
@@ -2146,7 +2146,7 @@
             Long childAssocId,
             Long parentNodeId,
             Long childNodeId,
-            QName assocTypeQName,
+            final QName assocTypeQName,
             QName assocQName,
             int index,
             String childName)
@@ -2161,12 +2161,43 @@
         final NodeRef newChildNodeRef = newChildNode.getNodeRef();
         
         // Reset the cm:name duplicate handling.  This has to be redone, if required.
-        Pair<String, Long> childNameUnique = getChildNameUnique(assocTypeQName, childName);
-        childAssoc.setChildNodeName(childNameUnique.getFirst());
-        childAssoc.setChildNodeNameCrc(childNameUnique.getSecond());
+        final Pair<String, Long> childNameUnique = getChildNameUnique(assocTypeQName, childName);
+        
+        HibernateCallback callback = new HibernateCallback()
+        {
+            public Object doInHibernate(Session session)
+            {
+                childAssoc.setChildNodeName(childNameUnique.getFirst());
+                childAssoc.setChildNodeNameCrc(childNameUnique.getSecond().longValue());
+                childAssoc.buildAssociation(newParentNode, newChildNode);
+                childAssoc.setTypeQName(qnameDAO, assocTypeQName);
+                // Flush again to force a DB constraint here
+                try
+                {
+                    DirtySessionMethodInterceptor.flushSession(session, true);
+                    // Done
+                    return null;
+                }
+                catch (ConstraintViolationException e)
+                {
+                    // There is already an entity
+                    if (isDebugEnabled)
+                    {
+                        logger.debug("Duplicate child association detected: \n" + "   Parent Node:     "
+                                + newParentNode.getId() + "\n" + "   Child Name Used:  " + childNameUnique, e);
+                    }
 
-        childAssoc.buildAssociation(newParentNode, newChildNode);
-        childAssoc.setTypeQName(qnameDAO, assocTypeQName);
+                    throw new DuplicateChildNodeNameException(newParentNode.getNodeRef(), childAssoc
+                            .getTypeQName(qnameDAO), childNameUnique.getFirst());
+                }
+            }
+        };
+        
+        // Make sure that all changes to the session are persisted so that we know if any
+        // failures are from the constraint or not
+        DirtySessionMethodInterceptor.flushSession(getSession(false));
+        getHibernateTemplate().execute(callback);
+        
         childAssoc.setQName(qnameDAO, assocQName);
         if (index >= 0)
         {
