#http {

    gzip on;
    gzip_min_length 1024;
    gzip_types text/plain application/xml text/css text/javascript; # text/html is always compressed

    client_max_body_size 8M; # How large files users want to upload

#}
#http {

# Both CAS regular and CAS ID-card auth nginx server sections are needed at the same time

# Also, in CAS Tomcat's server.xml, attributes scheme="https" secure="true" must be added to HTTP/1.1 <Connector> element

# DHS HTTP (redirect)
# CAS HTTP (regular)
server {
    listen 80;

    # For opening files with LibreOffice (if conf.openoffice-client-extensions in alfresco-global.properties is non-empty),
    # it is needed for web server on http port (80) to redirect requests to https port (443) with URL with the same path and query string.
    location / {
        rewrite ^(.*) https://$host$1;
    }
}

# DHS HTTP
server {
    listen 443;

    ssl on;
    ssl_certificate /etc/pki/tls/certs/public-hostname.crt;
    ssl_certificate_key /etc/pki/tls/private/public-hostname.key;

    location / {
        proxy_pass http://dhs01-http;
    }

    # Deny access to all Delta web services by default; allow access only to specific systems to specific services
    location /dhs/service {
        deny all;
    }

    # DHS specific settings
    proxy_set_header Host $host:$server_port; # CAS application needs this to send correct http redirects
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # DHS needs this to get correct client IP address for audit log;
                                                                 # also must set useClientIpFromXForwardedForHttpHeader=true in alfresco-global.properties
    proxy_read_timeout 3600s; # Some actions in DHS may take a long time

    # Not mandatory, just recommended somewhere...
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
}

upstream dhs01-http {
    # DHS needs sticky sessions! ip_hash should be enough, if clients don't change IP address between requests.
    # If clients change IP addresses between requests, then use cookie based sticky sessions (http://code.google.com/p/nginx-sticky-module/)
    ip_hash;
    server 127.0.0.1:8080;
}

#}
