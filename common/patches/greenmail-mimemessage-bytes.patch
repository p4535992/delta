The problem is that when GreenMail creates a MimeMessageobject, it parses part
of the request to String and then converts itback to byte array. This is
unnecessary and also it mangles theencoding, because in
CommandParser#consumeLiteral method "newString(buffer)" uses platform's default
charset, but inGreenMailUtil#newMimeMessage method
mailString.getBytes("US-ASCII") uses a specific charset always.

Index: com/icegreen/greenmail/imap/commands/AppendCommand.java
===================================================================
--- com/icegreen/greenmail/imap/commands/AppendCommand.java
+++ com/icegreen/greenmail/imap/commands/AppendCommand.java
@@ -16,6 +16,8 @@
 
 import javax.mail.Flags;
 import javax.mail.internet.MimeMessage;
+
+import java.io.ByteArrayInputStream;
 import java.io.FilterInputStream;
 import java.io.IOException;
 import java.io.InputStream;
@@ -121,10 +123,10 @@
         public MimeMessage mimeMessage(ImapRequestLineReader request)
                 throws ProtocolException {
             request.nextWordChar();
-            String mailString = consumeLiteral(request);
+            byte[] mail = consumeLiteralAsBytes(request);
 
             try {
-                return GreenMailUtil.newMimeMessage(mailString);
+                return GreenMailUtil.newMimeMessage(new ByteArrayInputStream(mail));
             } catch (Exception e) {
                 throw new ProtocolException("UnexpectedException: " + e.getMessage());
             }
Index: com/icegreen/greenmail/imap/commands/CommandParser.java
===================================================================
--- com/icegreen/greenmail/imap/commands/CommandParser.java
+++ com/icegreen/greenmail/imap/commands/CommandParser.java
@@ -199,6 +199,12 @@
      */
     protected String consumeLiteral(ImapRequestLineReader request)
             throws ProtocolException {
+
+        return new String(consumeLiteralAsBytes(request));
+    }
+
+    protected byte[] consumeLiteralAsBytes(ImapRequestLineReader request)
+            throws ProtocolException {
         // The 1st character must be '{'
         consumeChar(request, '{');
 
@@ -231,7 +237,7 @@
         byte[] buffer = new byte[size];
         request.read(buffer);
 
-        return new String(buffer);
+        return buffer;
     }
 
     /**
